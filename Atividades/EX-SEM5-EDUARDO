{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"15PMSLwk0Aqqk4D0YKNaK4nq53ceDivQA","authorship_tag":"ABX9TyNREFp2wLCFXS1VKoaF7PPB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### Exercício semana 5 sobre rede neural\n"],"metadata":{"id":"ua4x4AgTA12r"}},{"cell_type":"markdown","source":["Importando as bibliotecas\n"],"metadata":{"id":"jBc_L3WuDaCE"}},{"cell_type":"code","source":["import pandas as pd \n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","import matplotlib.pyplot as plt\n","import os\n","import re\n","import shutil\n","import string\n","import tensorflow as tf\n","from tensorflow import keras\n","from keras import layers\n","from keras import losses \n","\n","\n","\n"],"metadata":{"id":"lT8cH3HzCi_4","executionInfo":{"status":"ok","timestamp":1684862046146,"user_tz":180,"elapsed":836,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}}},"execution_count":140,"outputs":[]},{"cell_type":"markdown","source":["Para realizar essa rede neural utilizaremos um dataset das lojas americanas que recomenda ou não a compra de um produto. Assim, no final iremos testar esse modelo colocando dados aleatórios e vendo se seria recomendado a um amigo ou não. \n"],"metadata":{"id":"yN7RIEnXC_Kb"}},{"cell_type":"code","source":["# Pegando a url e já abrindo direto o dataset com a biblioteca do pandas\n","url = 'https://raw.githubusercontent.com/americanas-tech/b2w-reviews01/main/B2W-Reviews01.csv'\n","df = pd.read_csv(url)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sa_v3rv4-HE8","executionInfo":{"status":"ok","timestamp":1684862049583,"user_tz":180,"elapsed":2354,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"35b0c315-a4e4-4661-ddf1-061674080500"},"execution_count":141,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-141-4517c2fb82ed>:3: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(url)\n"]}]},{"cell_type":"markdown","source":["### Abrindo o dataset "],"metadata":{"id":"EWUlZpptE_kI"}},{"cell_type":"code","source":["# Descrição breve do dataset\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"zmfWXEthE8nK","executionInfo":{"status":"ok","timestamp":1684862049584,"user_tz":180,"elapsed":14,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"8c1feca2-316b-45a5-cd2c-51243c3644fa"},"execution_count":142,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       overall_rating  reviewer_birth_year\n","count   132373.000000        126389.000000\n","mean         3.492004          1977.495898\n","std          1.530289            21.895265\n","min          1.000000            59.000000\n","25%          2.000000          1969.000000\n","50%          4.000000          1980.000000\n","75%          5.000000          1987.000000\n","max          5.000000          2018.000000"],"text/html":["\n","  <div id=\"df-03a33f5e-9f4c-4753-ae83-19580d4e0299\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>overall_rating</th>\n","      <th>reviewer_birth_year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>132373.000000</td>\n","      <td>126389.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.492004</td>\n","      <td>1977.495898</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.530289</td>\n","      <td>21.895265</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>59.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>1969.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>4.000000</td>\n","      <td>1980.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>5.000000</td>\n","      <td>1987.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>5.000000</td>\n","      <td>2018.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-03a33f5e-9f4c-4753-ae83-19580d4e0299')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-03a33f5e-9f4c-4753-ae83-19580d4e0299 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-03a33f5e-9f4c-4753-ae83-19580d4e0299');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":142}]},{"cell_type":"code","source":["# Visualização simples do dataset \n","df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"id":"6Bo9LoHa_Dhk","executionInfo":{"status":"ok","timestamp":1684862049584,"user_tz":180,"elapsed":13,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"45b376e0-454e-44a1-e1d9-54105d8001c1"},"execution_count":143,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       submission_date                                        reviewer_id  \\\n","0  2018-01-01 00:11:28  d0fb1ca69422530334178f5c8624aa7a99da47907c44de...   \n","1  2018-01-01 00:13:48  014d6dc5a10aed1ff1e6f349fb2b059a2d3de511c7538a...   \n","2  2018-01-01 00:26:02  44f2c8edd93471926fff601274b8b2b5c4824e386ae4f2...   \n","\n","  product_id                                       product_name  \\\n","0  132532965  Notebook Asus Vivobook Max X541NA-GO472T Intel...   \n","1   22562178               Copo Acrílico Com Canudo 500ml Rocie   \n","2  113022329  Panela de Pressão Elétrica Philips Walita Dail...   \n","\n","    product_brand      site_category_lv1       site_category_lv2  \\\n","0             NaN            Informática                Notebook   \n","1             NaN  Utilidades Domésticas  Copos, Taças e Canecas   \n","2  philips walita        Eletroportáteis         Panela Elétrica   \n","\n","                       review_title  overall_rating recommend_to_a_friend  \\\n","0                               Bom               4                   Yes   \n","1  Preço imbatível, ótima qualidade               4                   Yes   \n","2      ATENDE TODAS AS EXPECTATIVA.               4                   Yes   \n","\n","                                         review_text  reviewer_birth_year  \\\n","0  Estou contente com a compra entrega rápida o ú...               1958.0   \n","1  Por apenas R$1994.20,eu consegui comprar esse ...               1996.0   \n","2  SUPERA EM AGILIDADE E PRATICIDADE OUTRAS PANEL...               1984.0   \n","\n","  reviewer_gender reviewer_state  \n","0               F             RJ  \n","1               M             SC  \n","2               M             SP  "],"text/html":["\n","  <div id=\"df-2686a113-0773-4001-8bd0-4f7573241d6e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>submission_date</th>\n","      <th>reviewer_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>product_brand</th>\n","      <th>site_category_lv1</th>\n","      <th>site_category_lv2</th>\n","      <th>review_title</th>\n","      <th>overall_rating</th>\n","      <th>recommend_to_a_friend</th>\n","      <th>review_text</th>\n","      <th>reviewer_birth_year</th>\n","      <th>reviewer_gender</th>\n","      <th>reviewer_state</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-01-01 00:11:28</td>\n","      <td>d0fb1ca69422530334178f5c8624aa7a99da47907c44de...</td>\n","      <td>132532965</td>\n","      <td>Notebook Asus Vivobook Max X541NA-GO472T Intel...</td>\n","      <td>NaN</td>\n","      <td>Informática</td>\n","      <td>Notebook</td>\n","      <td>Bom</td>\n","      <td>4</td>\n","      <td>Yes</td>\n","      <td>Estou contente com a compra entrega rápida o ú...</td>\n","      <td>1958.0</td>\n","      <td>F</td>\n","      <td>RJ</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-01-01 00:13:48</td>\n","      <td>014d6dc5a10aed1ff1e6f349fb2b059a2d3de511c7538a...</td>\n","      <td>22562178</td>\n","      <td>Copo Acrílico Com Canudo 500ml Rocie</td>\n","      <td>NaN</td>\n","      <td>Utilidades Domésticas</td>\n","      <td>Copos, Taças e Canecas</td>\n","      <td>Preço imbatível, ótima qualidade</td>\n","      <td>4</td>\n","      <td>Yes</td>\n","      <td>Por apenas R$1994.20,eu consegui comprar esse ...</td>\n","      <td>1996.0</td>\n","      <td>M</td>\n","      <td>SC</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-01-01 00:26:02</td>\n","      <td>44f2c8edd93471926fff601274b8b2b5c4824e386ae4f2...</td>\n","      <td>113022329</td>\n","      <td>Panela de Pressão Elétrica Philips Walita Dail...</td>\n","      <td>philips walita</td>\n","      <td>Eletroportáteis</td>\n","      <td>Panela Elétrica</td>\n","      <td>ATENDE TODAS AS EXPECTATIVA.</td>\n","      <td>4</td>\n","      <td>Yes</td>\n","      <td>SUPERA EM AGILIDADE E PRATICIDADE OUTRAS PANEL...</td>\n","      <td>1984.0</td>\n","      <td>M</td>\n","      <td>SP</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2686a113-0773-4001-8bd0-4f7573241d6e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2686a113-0773-4001-8bd0-4f7573241d6e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2686a113-0773-4001-8bd0-4f7573241d6e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":143}]},{"cell_type":"markdown","source":["### Tratando as variáveis de input"],"metadata":{"id":"dGYMO5TsBaQ9"}},{"cell_type":"markdown","source":["Nesta etapa serão feitas funções que deixa todas letras em minuscúlo, tokeniza e remove stop words "],"metadata":{"id":"xBsIUXP8BkBi"}},{"cell_type":"code","source":["# Importando as bibliotecas \n","import nltk\n","from nltk import tokenize\n","nltk.download('punkt')\n","nltk.download('stopwords')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5wbuS6gbCA_A","executionInfo":{"status":"ok","timestamp":1684862049584,"user_tz":180,"elapsed":12,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"f04f1dda-6ac5-461a-92d4-bc475be130d9"},"execution_count":144,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":144}]},{"cell_type":"code","source":["# Variavel que guarda todas as stopwords em PTBR\n","stopwords = nltk.corpus.stopwords.words('portuguese')\n"],"metadata":{"id":"swKU5XKtCOGV","executionInfo":{"status":"ok","timestamp":1684862049585,"user_tz":180,"elapsed":11,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}}},"execution_count":145,"outputs":[]},{"cell_type":"code","source":["# Função que deixa em minusculo e tokeniza as palavras\n","def tokenizeWords(arrayEng):\n","    inputUser = str(arrayEng)\n","    inputUser = inputUser.lower()\n","    outputTokenized = tokenize.word_tokenize(inputUser, language='portuguese')\n","    return outputTokenized\n"],"metadata":{"id":"cVAd4CoCCY_O","executionInfo":{"status":"ok","timestamp":1684862049585,"user_tz":180,"elapsed":11,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}}},"execution_count":146,"outputs":[]},{"cell_type":"code","source":["# Caso de teste da função \n","test = \"O rato não roeu a roupa do rei de roma\"\n","output_tokenized = tokenizeWords(test)\n","\n","print(\"Input : \",test )\n","print(\"Output : \", output_tokenized)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kojzg8PKEsbG","executionInfo":{"status":"ok","timestamp":1684862049585,"user_tz":180,"elapsed":10,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"886ac4a3-da21-4417-b792-889e3f816b2d"},"execution_count":147,"outputs":[{"output_type":"stream","name":"stdout","text":["Input :  O rato não roeu a roupa do rei de roma\n","Output :  ['o', 'rato', 'não', 'roeu', 'a', 'roupa', 'do', 'rei', 'de', 'roma']\n"]}]},{"cell_type":"code","source":["def removeStopWords(arrayTokenized):\n","    wordsFiltered = []\n","    for word in arrayTokenized:\n","        if word not in stopwords and word.isalpha():\n","            wordsFiltered.append(word)\n","\n","    return wordsFiltered"],"metadata":{"id":"tPv1FHaRCVoL","executionInfo":{"status":"ok","timestamp":1684862049586,"user_tz":180,"elapsed":10,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}}},"execution_count":148,"outputs":[]},{"cell_type":"code","source":["# Caso de teste da função \n","test_input = output_tokenized\n","output_stopwords = removeStopWords(test_input)\n","\n","print(\"Input : \",test_input )\n","print(\"Output : \", output_stopwords)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AqoCRx95Fj0-","executionInfo":{"status":"ok","timestamp":1684862049586,"user_tz":180,"elapsed":10,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"08d7364f-5216-4c2a-d8f7-63e2596c3ca6"},"execution_count":149,"outputs":[{"output_type":"stream","name":"stdout","text":["Input :  ['o', 'rato', 'não', 'roeu', 'a', 'roupa', 'do', 'rei', 'de', 'roma']\n","Output :  ['rato', 'roeu', 'roupa', 'rei', 'roma']\n"]}]},{"cell_type":"code","source":["# Aplicando as funções no dataframe e gerando novas colunas \n","base_training = df\n","base_training['tokenized'] = base_training['review_text'].apply(tokenizeWords)\n","base_training['tokenized_stopwords'] = base_training['tokenized'].apply(removeStopWords)\n"],"metadata":{"id":"SMzxM0gHU16d","executionInfo":{"status":"ok","timestamp":1684862095248,"user_tz":180,"elapsed":45671,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}}},"execution_count":150,"outputs":[]},{"cell_type":"code","source":["# Transformando se é recomendado ou não para um amigo em números \n","# Caso seja 0 é negativo e 1 é positivo\n","positive = int(1)\n","negative = int(0)\n","base_training[\"recommend_to_a_friend\"] = base_training[\"recommend_to_a_friend\"].replace({\"Yes\":positive, \"No\":negative})"],"metadata":{"id":"L-bIqwRAegpq","executionInfo":{"status":"ok","timestamp":1684862190344,"user_tz":180,"elapsed":876,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}}},"execution_count":161,"outputs":[]},{"cell_type":"code","source":["base_training.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":652},"id":"yUb79LE1VDpn","executionInfo":{"status":"ok","timestamp":1684862190886,"user_tz":180,"elapsed":7,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"14e1812a-6e43-4e1b-8e47-fd84585d572b"},"execution_count":162,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       submission_date                                        reviewer_id  \\\n","0  2018-01-01 00:11:28  d0fb1ca69422530334178f5c8624aa7a99da47907c44de...   \n","1  2018-01-01 00:13:48  014d6dc5a10aed1ff1e6f349fb2b059a2d3de511c7538a...   \n","2  2018-01-01 00:26:02  44f2c8edd93471926fff601274b8b2b5c4824e386ae4f2...   \n","3  2018-01-01 00:35:54  ce741665c1764ab2d77539e18d0e4f66dde6213c9f0863...   \n","4  2018-01-01 01:00:28  7d7b6b18dda804a897359276cef0ca252f9932bf4b5c8e...   \n","\n","  product_id                                       product_name  \\\n","0  132532965  Notebook Asus Vivobook Max X541NA-GO472T Intel...   \n","1   22562178               Copo Acrílico Com Canudo 500ml Rocie   \n","2  113022329  Panela de Pressão Elétrica Philips Walita Dail...   \n","3  113851581               Betoneira Columbus - Roma Brinquedos   \n","4  131788803  Smart TV LED 43\" LG 43UJ6525 Ultra HD 4K com C...   \n","\n","    product_brand      site_category_lv1       site_category_lv2  \\\n","0             NaN            Informática                Notebook   \n","1             NaN  Utilidades Domésticas  Copos, Taças e Canecas   \n","2  philips walita        Eletroportáteis         Panela Elétrica   \n","3     roma jensen             Brinquedos   Veículos de Brinquedo   \n","4              lg      TV e Home Theater                      TV   \n","\n","                       review_title  overall_rating  recommend_to_a_friend  \\\n","0                               Bom               4                    1.0   \n","1  Preço imbatível, ótima qualidade               4                    1.0   \n","2      ATENDE TODAS AS EXPECTATIVA.               4                    1.0   \n","3        presente mais que desejado               4                    1.0   \n","4            Sem duvidas, excelente               5                    1.0   \n","\n","                                         review_text  reviewer_birth_year  \\\n","0  Estou contente com a compra entrega rápida o ú...               1958.0   \n","1  Por apenas R$1994.20,eu consegui comprar esse ...               1996.0   \n","2  SUPERA EM AGILIDADE E PRATICIDADE OUTRAS PANEL...               1984.0   \n","3  MEU FILHO AMOU! PARECE DE VERDADE COM TANTOS D...               1985.0   \n","4  A entrega foi no prazo, as americanas estão de...               1994.0   \n","\n","  reviewer_gender reviewer_state  \\\n","0               F             RJ   \n","1               M             SC   \n","2               M             SP   \n","3               F             SP   \n","4               M             MG   \n","\n","                                           tokenized  \\\n","0  [estou, contente, com, a, compra, entrega, ráp...   \n","1  [por, apenas, r, $, 1994.20, ,, eu, consegui, ...   \n","2  [supera, em, agilidade, e, praticidade, outras...   \n","3  [meu, filho, amou, !, parece, de, verdade, com...   \n","4  [a, entrega, foi, no, prazo, ,, as, americanas...   \n","\n","                                 tokenized_stopwords  \n","0  [contente, compra, entrega, rápida, único, pro...  \n","1  [apenas, r, consegui, comprar, lindo, copo, ac...  \n","2  [supera, agilidade, praticidade, outras, panel...  \n","3  [filho, amou, parece, verdade, tantos, detalhe...  \n","4  [entrega, prazo, americanas, parabéns, smart, ...  "],"text/html":["\n","  <div id=\"df-e0a6cc1c-aace-489b-8e45-152ed89df306\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>submission_date</th>\n","      <th>reviewer_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>product_brand</th>\n","      <th>site_category_lv1</th>\n","      <th>site_category_lv2</th>\n","      <th>review_title</th>\n","      <th>overall_rating</th>\n","      <th>recommend_to_a_friend</th>\n","      <th>review_text</th>\n","      <th>reviewer_birth_year</th>\n","      <th>reviewer_gender</th>\n","      <th>reviewer_state</th>\n","      <th>tokenized</th>\n","      <th>tokenized_stopwords</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-01-01 00:11:28</td>\n","      <td>d0fb1ca69422530334178f5c8624aa7a99da47907c44de...</td>\n","      <td>132532965</td>\n","      <td>Notebook Asus Vivobook Max X541NA-GO472T Intel...</td>\n","      <td>NaN</td>\n","      <td>Informática</td>\n","      <td>Notebook</td>\n","      <td>Bom</td>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>Estou contente com a compra entrega rápida o ú...</td>\n","      <td>1958.0</td>\n","      <td>F</td>\n","      <td>RJ</td>\n","      <td>[estou, contente, com, a, compra, entrega, ráp...</td>\n","      <td>[contente, compra, entrega, rápida, único, pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-01-01 00:13:48</td>\n","      <td>014d6dc5a10aed1ff1e6f349fb2b059a2d3de511c7538a...</td>\n","      <td>22562178</td>\n","      <td>Copo Acrílico Com Canudo 500ml Rocie</td>\n","      <td>NaN</td>\n","      <td>Utilidades Domésticas</td>\n","      <td>Copos, Taças e Canecas</td>\n","      <td>Preço imbatível, ótima qualidade</td>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>Por apenas R$1994.20,eu consegui comprar esse ...</td>\n","      <td>1996.0</td>\n","      <td>M</td>\n","      <td>SC</td>\n","      <td>[por, apenas, r, $, 1994.20, ,, eu, consegui, ...</td>\n","      <td>[apenas, r, consegui, comprar, lindo, copo, ac...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-01-01 00:26:02</td>\n","      <td>44f2c8edd93471926fff601274b8b2b5c4824e386ae4f2...</td>\n","      <td>113022329</td>\n","      <td>Panela de Pressão Elétrica Philips Walita Dail...</td>\n","      <td>philips walita</td>\n","      <td>Eletroportáteis</td>\n","      <td>Panela Elétrica</td>\n","      <td>ATENDE TODAS AS EXPECTATIVA.</td>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>SUPERA EM AGILIDADE E PRATICIDADE OUTRAS PANEL...</td>\n","      <td>1984.0</td>\n","      <td>M</td>\n","      <td>SP</td>\n","      <td>[supera, em, agilidade, e, praticidade, outras...</td>\n","      <td>[supera, agilidade, praticidade, outras, panel...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-01-01 00:35:54</td>\n","      <td>ce741665c1764ab2d77539e18d0e4f66dde6213c9f0863...</td>\n","      <td>113851581</td>\n","      <td>Betoneira Columbus - Roma Brinquedos</td>\n","      <td>roma jensen</td>\n","      <td>Brinquedos</td>\n","      <td>Veículos de Brinquedo</td>\n","      <td>presente mais que desejado</td>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>MEU FILHO AMOU! PARECE DE VERDADE COM TANTOS D...</td>\n","      <td>1985.0</td>\n","      <td>F</td>\n","      <td>SP</td>\n","      <td>[meu, filho, amou, !, parece, de, verdade, com...</td>\n","      <td>[filho, amou, parece, verdade, tantos, detalhe...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-01-01 01:00:28</td>\n","      <td>7d7b6b18dda804a897359276cef0ca252f9932bf4b5c8e...</td>\n","      <td>131788803</td>\n","      <td>Smart TV LED 43\" LG 43UJ6525 Ultra HD 4K com C...</td>\n","      <td>lg</td>\n","      <td>TV e Home Theater</td>\n","      <td>TV</td>\n","      <td>Sem duvidas, excelente</td>\n","      <td>5</td>\n","      <td>1.0</td>\n","      <td>A entrega foi no prazo, as americanas estão de...</td>\n","      <td>1994.0</td>\n","      <td>M</td>\n","      <td>MG</td>\n","      <td>[a, entrega, foi, no, prazo, ,, as, americanas...</td>\n","      <td>[entrega, prazo, americanas, parabéns, smart, ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e0a6cc1c-aace-489b-8e45-152ed89df306')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e0a6cc1c-aace-489b-8e45-152ed89df306 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e0a6cc1c-aace-489b-8e45-152ed89df306');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":162}]},{"cell_type":"markdown","source":["### Vetorizando cada palavra"],"metadata":{"id":"MOlGWp96XLW4"}},{"cell_type":"markdown","source":["Nesta etapa as palavras são vetorizadas e assim cada número inteiro corresponde a uma palavra"],"metadata":{"id":"KYqVebtObBJ4"}},{"cell_type":"code","source":["# Definindo as configurações para vetorizar\n","vectorizer = layers.TextVectorization(max_tokens=10000, output_mode='int', output_sequence_length=250)\n","\n","# Adaptando a coluna de vetorização com base na coluna que já havia sido removida as stopwords\n","vectorizer.adapt(base_training['tokenized_stopwords'].apply(lambda x: ' '.join(x)).values)\n","\n","# Convertendo a coluna que havia sido adaptada em um vetor \n","text_vectors = vectorizer(base_training['tokenized_stopwords'].apply(lambda x: ' '.join(x)).values).numpy()\n","\n","# Mostrando o resultado do vetor\n","print(text_vectors)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eRnHjbgrYZ9K","executionInfo":{"status":"ok","timestamp":1684862197957,"user_tz":180,"elapsed":6768,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"0e641bf1-e7e2-4b39-81eb-f45de717e72f"},"execution_count":163,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1204   22    5 ...    0    0    0]\n"," [  93  417  297 ...    0    0    0]\n"," [2129  572  752 ...    0    0    0]\n"," ...\n"," [   8   11    9 ...    0    0    0]\n"," [  78  375  147 ...    0    0    0]\n"," [  12    2    8 ...    0    0    0]]\n"]}]},{"cell_type":"code","source":["# Demonstrando a transformação \n","print(\"389 == \",vectorizer.get_vocabulary()[389])\n","print('Tamanho do vocabulário ==  {}'.format(len(vectorizer.get_vocabulary())))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KEUKVG1aaRDk","executionInfo":{"status":"ok","timestamp":1684862197957,"user_tz":180,"elapsed":23,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"33823c30-37b2-4ef8-e870-724a2b9e238a"},"execution_count":164,"outputs":[{"output_type":"stream","name":"stdout","text":["389 ==  pessoa\n","Tamanho do vocabulário ==  10000\n"]}]},{"cell_type":"markdown","source":["### Definindo as váriaveis de treino e teste\n"],"metadata":{"id":"3Jkk_hmCKEcQ"}},{"cell_type":"markdown","source":["Definindo as variaveis de treino, sendo x o input e y o output. \n","De tal forma, que iremos utilizar apenas o texto já tokenizado e sem stop words para treinar o modelo . \n","\n","x = 'review_text'\n","\n","y = 'recommend_to_a_friend'\n","\n","\n"],"metadata":{"id":"unUIJzEhGCW4"}},{"cell_type":"code","source":["# Definindo as features para o modelo e já criando as amostras de treino e teste\n","\n","features = base_training[['tokenized_stopwords']]\n","target = base_training['recommend_to_a_friend']"],"metadata":{"id":"zUdBVzooDeEA","executionInfo":{"status":"ok","timestamp":1684862101735,"user_tz":180,"elapsed":23,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}}},"execution_count":156,"outputs":[]},{"cell_type":"code","source":["# Utilizando a biblioteca do sklearn para já criar amostras de treino e teste\n","X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)\n"],"metadata":{"id":"lyAP3mfdHtQS","executionInfo":{"status":"ok","timestamp":1684862101736,"user_tz":180,"elapsed":23,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}}},"execution_count":157,"outputs":[]},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"6lKBFcNTNjBd","executionInfo":{"status":"ok","timestamp":1684862101736,"user_tz":180,"elapsed":23,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"de8fd93c-2658-463e-ff3c-137643da497e"},"execution_count":158,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                      tokenized_stopwords\n","104547  [produto, bom, rápida, entrega, preço, justo, ...\n","84004   [tv, antiga, aparelho, funciona, perfeitamente...\n","15557   [produto, boa, qualidade, veio, todos, itens, ...\n","77836         [gostei, bastante, design, alem, leve, bom]\n","76401   [recebi, hoje, americanas, perdendo, tipo, ati...\n","...                                                   ...\n","110268  [empresa, compromisso, cliente, entrega, produ...\n","119879          [ainda, acostumando, tamanho, geral, bom]\n","103694  [momento, posso, dizer, produto, veio, perfeit...\n","131932  [ótima, invenção, prática, fácil, limpar, depe...\n","121958  [chegou, antes, prazo, bem, embaladas, fortes,...\n","\n","[105898 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-62fcf221-9d68-48a1-903e-4bf2e57046d9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tokenized_stopwords</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>104547</th>\n","      <td>[produto, bom, rápida, entrega, preço, justo, ...</td>\n","    </tr>\n","    <tr>\n","      <th>84004</th>\n","      <td>[tv, antiga, aparelho, funciona, perfeitamente...</td>\n","    </tr>\n","    <tr>\n","      <th>15557</th>\n","      <td>[produto, boa, qualidade, veio, todos, itens, ...</td>\n","    </tr>\n","    <tr>\n","      <th>77836</th>\n","      <td>[gostei, bastante, design, alem, leve, bom]</td>\n","    </tr>\n","    <tr>\n","      <th>76401</th>\n","      <td>[recebi, hoje, americanas, perdendo, tipo, ati...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>110268</th>\n","      <td>[empresa, compromisso, cliente, entrega, produ...</td>\n","    </tr>\n","    <tr>\n","      <th>119879</th>\n","      <td>[ainda, acostumando, tamanho, geral, bom]</td>\n","    </tr>\n","    <tr>\n","      <th>103694</th>\n","      <td>[momento, posso, dizer, produto, veio, perfeit...</td>\n","    </tr>\n","    <tr>\n","      <th>131932</th>\n","      <td>[ótima, invenção, prática, fácil, limpar, depe...</td>\n","    </tr>\n","    <tr>\n","      <th>121958</th>\n","      <td>[chegou, antes, prazo, bem, embaladas, fortes,...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>105898 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-62fcf221-9d68-48a1-903e-4bf2e57046d9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-62fcf221-9d68-48a1-903e-4bf2e57046d9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-62fcf221-9d68-48a1-903e-4bf2e57046d9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":158}]},{"cell_type":"code","source":["y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LT9H8-_Qd7y3","executionInfo":{"status":"ok","timestamp":1684862101736,"user_tz":180,"elapsed":10,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"9ab03162-7144-4fb6-fa7c-5d824bf7bc48"},"execution_count":159,"outputs":[{"output_type":"execute_result","data":{"text/plain":["104547    1.0\n","84004     1.0\n","15557     1.0\n","77836     1.0\n","76401     0.0\n","         ... \n","110268    0.0\n","119879    1.0\n","103694    1.0\n","131932    1.0\n","121958    1.0\n","Name: recommend_to_a_friend, Length: 105898, dtype: float64"]},"metadata":{},"execution_count":159}]},{"cell_type":"code","source":["# Convertendo a array em um tensor \n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":356},"id":"SjIM8NMjizil","executionInfo":{"status":"error","timestamp":1684862102114,"user_tz":180,"elapsed":386,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"fac0976c-f1c8-4be6-e97e-78fc8fe797d2"},"execution_count":160,"outputs":[{"output_type":"error","ename":"ImportError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-160-01d0838ea8e0>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Convertendo a array em um tensor\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpreprocessing\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtext\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mTokenizer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpreprocessing\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msequence\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpad_sequences\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mImportError\u001b[0m: cannot import name 'pad_sequences' from 'keras.preprocessing.sequence' (/usr/local/lib/python3.10/dist-packages/keras/preprocessing/sequence.py)","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"markdown","source":["### Definindo o modelo no keras"],"metadata":{"id":"jya6vNkPKlA_"}},{"cell_type":"code","source":["embedding_dim = 16\n","\n","model = tf.keras.Sequential([\n","  layers.Embedding(max_features + 1, embedding_dim),\n","  layers.Dropout(0.2),\n","  layers.GlobalAveragePooling1D(),\n","  layers.Dropout(0.2),\n","  layers.Dense(1)])\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"is8b8JM5cH1N","executionInfo":{"status":"ok","timestamp":1684859292672,"user_tz":180,"elapsed":1706,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"5065acd4-01f2-47ac-d50e-76e6b3f559c4"},"execution_count":102,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," embedding (Embedding)       (None, None, 16)          160016    \n","                                                                 \n"," dropout (Dropout)           (None, None, 16)          0         \n","                                                                 \n"," global_average_pooling1d (G  (None, 16)               0         \n"," lobalAveragePooling1D)                                          \n","                                                                 \n"," dropout_1 (Dropout)         (None, 16)                0         \n","                                                                 \n"," dense (Dense)               (None, 1)                 17        \n","                                                                 \n","=================================================================\n","Total params: 160,033\n","Trainable params: 160,033\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.compile(loss=losses.BinaryCrossentropy(from_logits=True),\n","              optimizer='adam',\n","              metrics=tf.metrics.BinaryAccuracy(threshold=0.0))\n"],"metadata":{"id":"2VXjbBYNcPDf","executionInfo":{"status":"ok","timestamp":1684860605840,"user_tz":180,"elapsed":986,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}}},"execution_count":136,"outputs":[]},{"cell_type":"code","source":["# fit the keras model on the dataset\n","model.fit(X_train, y_train, epochs=150, batch_size=42)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":328},"id":"Ehe_hzSxLzTT","executionInfo":{"status":"error","timestamp":1684860606060,"user_tz":180,"elapsed":5,"user":{"displayName":"Eduardo Porto","userId":"08927512145428644799"}},"outputId":"2cc3d1f6-7dd5-4be9-cc30-b0f50fb6c5dd"},"execution_count":137,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-137-cb61e8a03b3b>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# fit the keras model on the dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m150\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m42\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     68\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m             \u001b[0;31m# `tf.debugging.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 70\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     71\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36mconvert_to_eager_tensor\u001b[0;34m(value, ctx, dtype)\u001b[0m\n\u001b[1;32m    101\u001b[0m       \u001b[0mdtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdtypes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_datatype_enum\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    102\u001b[0m   \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 103\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mEagerTensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdevice_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    104\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    105\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Failed to convert a NumPy array to a Tensor (Unsupported object type list)."]}]},{"cell_type":"code","source":[],"metadata":{"id":"lXTC7VxNMmjf"},"execution_count":null,"outputs":[]}]}